// Format Video Enrichment Response\nconst response = $input.first().json;\n\nif (response.error) {\n  return {\n    success: false,\n    message: `âŒ Video konnte nicht analysiert werden: ${response.error}\\n\\nðŸ’¡ UnterstÃ¼tzte Plattformen:\\n- YouTube (youtube.com, youtu.be)\\n- Vimeo (vimeo.com)\\n- Brightcove (players.brightcove.net)\\n- Direct MP4/WebM/MOV`\n  };\n}\n\n// Format duration\nconst formatDuration = (seconds) => {\n  if (!seconds) return null;\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = seconds % 60;\n  if (hours > 0) return `${hours}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  return `${minutes}:${String(secs).padStart(2, '0')}`;\n};\n\n// Format file size\nconst formatFileSize = (bytes) => {\n  if (!bytes) return null;\n  const mb = bytes / 1024 / 1024;\n  return `${mb.toFixed(1)} MB`;\n};\n\n// Build formatted response\nlet message = `ðŸŽ¬ VIDEO ERFOLGREICH ANALYSIERT!\\n\\n`;\n\nif (response.title) {\n  message += `ðŸ“Œ Titel: ${response.title}\\n`;\n}\n\nif (response.platform) {\n  const platformName = response.platform.charAt(0).toUpperCase() + response.platform.slice(1);\n  message += `ðŸŒ Platform: ${platformName}\\n`;\n}\n\nconst duration = formatDuration(response.duration);\nif (duration) {\n  message += `â±ï¸ Dauer: ${duration}\\n`;\n}\n\nconst metadata = response.metadata || {};\n\nif (metadata.resolution) {\n  message += `ðŸ“ AuflÃ¶sung: ${metadata.resolution}\\n`;\n}\n\nconst fileSize = formatFileSize(metadata.file_size);\nif (fileSize) {\n  message += `ðŸ’¾ DateigrÃ¶ÃŸe: ${fileSize}\\n`;\n}\n\nif (response.channel_title) {\n  message += `ðŸ‘¤ Kanal: ${response.channel_title}\\n`;\n}\n\nif (response.view_count) {\n  message += `ðŸ‘ï¸ Aufrufe: ${response.view_count.toLocaleString('de-DE')}\\n`;\n}\n\nif (response.like_count) {\n  message += `ðŸ‘ Likes: ${response.like_count.toLocaleString('de-DE')}\\n`;\n}\n\nif (metadata.models && metadata.models.length > 0) {\n  message += `ðŸ“‹ Modelle: ${metadata.models.join(', ')}\\n`;\n}\n\n// Only show description if different from title\nif (response.description && response.description !== response.title) {\n  const desc = response.description.substring(0, 150);\n  message += `\\nðŸ“ ${desc}${response.description.length > 150 ? '...' : ''}\\n`;\n}\n\nif (response.thumbnail_url) {\n  message += `\\nðŸ–¼ï¸ Thumbnail verfÃ¼gbar\\n`;\n}\n\nif (response.database_id) {\n  message += `\\nâœ… Video gespeichert`;\n  if (response.linked_products > 0) {\n    message += ` (${response.linked_products} Produkte verknÃ¼pft)`;\n  }\n  message += '\\n';\n}\n\nreturn {\n  success: true,\n  message: message,\n  raw_data: response\n};\n
