feat: Major improvements to Agent and PDF Processing

AGENT IMPROVEMENTS:
- Migrated to modern LangChain API (Tool-Calling Agent)
- Removed deprecated ConversationBufferMemory
- Added InMemoryChatMessageHistory for conversation memory
- Suppressed deprecation warnings
- Improved prompt to prevent hallucinations
- Added multi-source search capability
- Switched to llama3.2:3b for stability

PDF PROCESSING IMPROVEMENTS:
- Error Code Extractor: Increased line limit 20 to 50
- Error Code Extractor: Increased solution length 1000 to 3000 chars
- Error Code Extractor: Increased steps limit 15 to 30
- Parts Extractor: Better pattern matching with prefix and delimiter handling
- Parts Extractor: Added Vision AI integration for missing part names
- Parts Extractor: Automatic enrichment when part_name is None

DATABASE:
- Created vw_parts view with manufacturer data (Migration 81)
- Fixed column names (part_description, part_category, unit_price_usd)
- Added manufacturer_name and manufacturer_code to view

TESTING:
- Added comprehensive test suite (test_agent_improved.py)
- Added direct tool testing (test_tools_directly.py)
- Added parts extraction testing
- Added error code validation tests
- Added DB cleanup scripts

NEW FEATURES:
- Vision AI for parts catalog tables
- Hybrid approach: Pattern Matching + Vision AI
- Better handling of complex table layouts
- Improved part name extraction from various formats

BUG FIXES:
- Fixed tool output format (error_codes key)
- Fixed manufacturer name in responses
- Fixed conversation memory implementation
- Fixed parts search to use vw_parts view

This is a major refactoring focused on data quality and agent reliability.
