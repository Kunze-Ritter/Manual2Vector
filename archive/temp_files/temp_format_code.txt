// Format Video Enrichment Response
const response = $input.first().json;

if (response.error) {
  return {
    success: false,
    message: `âŒ Video konnte nicht analysiert werden:\n${response.error}\n\nðŸ’¡ UnterstÃ¼tzte Plattformen:\n- YouTube (youtube.com, youtu.be)\n- Vimeo (vimeo.com)\n- Brightcove (players.brightcove.net)`
  };
}

// Format duration
const formatDuration = (seconds) => {
  if (!seconds) return 'N/A';
  const hours = Math.floor(seconds / 3600);
  const minutes = Math.floor((seconds % 3600) / 60);
  const secs = seconds % 60;
  
  if (hours > 0) {
    return `${hours}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
  }
  return `${minutes}:${String(secs).padStart(2, '0')}`;
};

// Format numbers
const formatNumber = (num) => {
  if (!num) return 'N/A';
  return num.toLocaleString('de-DE');
};

// Build formatted response
let message = `ðŸŽ¬ VIDEO ERFOLGREICH ANALYSIERT!\n\n`;

if (response.title) message += `ðŸ“Œ Titel: ${response.title}\n`;
if (response.platform) message += `ðŸŒ Platform: ${response.platform}\n`;
if (response.duration) message += `â±ï¸ Dauer: ${formatDuration(response.duration)}\n`;
if (response.channel_title) message += `ðŸ‘¤ Kanal: ${response.channel_title}\n`;
if (response.view_count) message += `ðŸ‘ï¸ Aufrufe: ${formatNumber(response.view_count)}\n`;
if (response.like_count) message += `ðŸ‘ Likes: ${formatNumber(response.like_count)}\n`;

if (response.description) {
  const descPreview = response.description.substring(0, 200);
  message += `\nðŸ“ Beschreibung:\n${descPreview}${response.description.length > 200 ? '...' : ''}\n`;
}

if (response.thumbnail_url) {
  message += `\nðŸ–¼ï¸ Thumbnail: ${response.thumbnail_url}\n`;
}

if (response.video_url) {
  message += `\nðŸ”— Video-URL: ${response.video_url}\n`;
}

if (response.video_id) {
  message += `\nâœ… Video wurde in der Datenbank gespeichert!\n`;
  message += `   ID: ${response.video_id}\n`;
  
  if (response.duplicate_detected) {
    message += `   â„¹ï¸ Hinweis: Dieses Video war bereits vorhanden (Deduplizierung)\n`;
  }
}

if (response.manufacturer_id) {
  message += `   ðŸ­ VerknÃ¼pft mit Hersteller\n`;
}

return {
  success: true,
  message: message,
  raw_data: response
};
