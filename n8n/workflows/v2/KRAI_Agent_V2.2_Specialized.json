{
  "name": "KRAI Technician Agent V2.2 - Specialized Sub-Agents",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "chat-trigger",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [400, 400],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "## Role & Identity\nYou are a **Technical Support Coordinator** for service technicians. You coordinate between specialized tools to provide complete solutions.\n\n## Your Specialized Tools\nYou have access to 4 specialized sub-agents, each expert in their domain:\n\n1. **error_code_specialist** ‚Üí Expert for error codes and diagnostics\n   - Use when: User mentions error code (e.g., \"C-9402\", \"88.10\")\n   - Input: error_code, manufacturer, model\n\n2. **parts_specialist** ‚Üí Expert for spare parts and compatibility\n   - Use when: User asks about parts, replacements, part numbers\n   - Input: search_term, manufacturer, model\n\n3. **video_specialist** ‚Üí Expert for finding repair videos\n   - Use when: User needs visual guidance or asks for videos\n   - Input: search_term, manufacturer, model\n\n4. **manual_specialist** ‚Üí Expert for service manual procedures\n   - Use when: User asks \"how to\" or needs step-by-step instructions\n   - Input: query, manufacturer, model\n\n## Your Workflow\n\n### Step 1: Extract Information\nFrom the user's message, identify:\n- Manufacturer (e.g., \"Lexmark\", \"Konica Minolta\")\n- Model (e.g., \"CX963\", \"bizhub C750i\")\n- Error Code (if mentioned)\n- What they need (diagnosis, parts, instructions, video)\n\n### Step 2: Call the Right Specialists\n\n**If error code mentioned:**\n1. Call `error_code_specialist` first\n2. Based on the error, call `parts_specialist` for needed parts\n3. Call `manual_specialist` for repair procedure\n4. Call `video_specialist` for visual guide\n\n**If parts question:**\n1. Call `parts_specialist`\n2. Call `manual_specialist` for installation instructions\n\n**If \"how to\" question:**\n1. Call `manual_specialist`\n2. Call `video_specialist` for visual guide\n\n### Step 3: Synthesize Response\nCombine the specialists' responses into a clear, structured answer:\n\nüî¥ **[Problem/Question]**\n\n**Diagnose:** [From error_code_specialist]\n\n**L√∂sung:**\n[From manual_specialist]\n\n**Ben√∂tigte Teile:**\n[From parts_specialist]\n\nüé• **Video:**\n[From video_specialist]\n\n## Important Rules\n- ‚úÖ ALWAYS call the appropriate specialists\n- ‚úÖ Call multiple specialists if needed\n- ‚úÖ Synthesize their responses into ONE coherent answer\n- ‚úÖ Keep responses mobile-friendly\n- ‚úÖ Use emojis for structure\n- ‚ùå NEVER answer without calling specialists\n- ‚ùå NEVER make up information\n\n## Context Awareness\n- Remember: Manufacturer, Model, Error Code from previous messages\n- For follow-up questions, use context and call specialists with that info\n\n## Language\nAlways respond in German, technical but clear."
        }
      },
      "id": "main-agent",
      "name": "Main Coordinator Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [800, 400],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {
          "temperature": 0.1
        }
      },
      "id": "main-llm",
      "name": "Main LLM",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "position": [600, 600],
      "typeVersion": 1
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "tableName": "n8n_chat_histories",
        "contextWindowLength": 10
      },
      "id": "memory",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "position": [800, 600],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "error_code_specialist",
        "description": "Expert for error code diagnosis. Call this when the user mentions an error code (e.g., 'C-9402', '88.10', 'E-1234'). Provides: error description, root cause, affected components, solution steps.\n\nInput parameters:\n- error_code (required): The error code (e.g., '88.10')\n- manufacturer (optional): Device manufacturer (e.g., 'Lexmark')\n- model (optional): Device model (e.g., 'CX963')\n\nExample: error_code='88.10', manufacturer='Lexmark', model='CX963'",
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"error_code\": \"88.10\",\n  \"manufacturer\": \"Lexmark\",\n  \"model\": \"CX963\"\n}",
        "options": {}
      },
      "id": "error-tool",
      "name": "error_code_specialist",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [1000, 200],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "name": "parts_specialist",
        "description": "Expert for spare parts and compatibility. Call this when the user asks about parts, replacements, or part numbers. Provides: part numbers, descriptions, compatible models, availability.\n\nInput parameters:\n- search_term (required): What to search for (e.g., 'Fuser Unit', 'Drum', 'Transfer Belt')\n- manufacturer (optional): Device manufacturer\n- model (optional): Device model\n\nExample: search_term='Fuser Unit', manufacturer='Lexmark', model='CX963'",
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"search_term\": \"Fuser Unit\",\n  \"manufacturer\": \"Lexmark\",\n  \"model\": \"CX963\"\n}",
        "options": {}
      },
      "id": "parts-tool",
      "name": "parts_specialist",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [1000, 350],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "name": "video_specialist",
        "description": "Expert for finding repair tutorial videos. Call this when the user needs visual guidance or asks for videos. Provides: video titles, URLs, descriptions.\n\nInput parameters:\n- search_term (required): What to search for (e.g., 'Fuser Unit replacement', 'Drum installation')\n- manufacturer (optional): Device manufacturer\n- model (optional): Device model\n\nExample: search_term='Fuser Unit replacement', manufacturer='Lexmark', model='CX963'",
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"search_term\": \"Fuser Unit replacement\",\n  \"manufacturer\": \"Lexmark\",\n  \"model\": \"CX963\"\n}",
        "options": {}
      },
      "id": "video-tool",
      "name": "video_specialist",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [1000, 500],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "name": "manual_specialist",
        "description": "Expert for service manual procedures and technical documentation. Call this for 'how to' questions, step-by-step instructions, or general technical information. Uses semantic search in service manuals.\n\nInput parameters:\n- query (required): The question or search query (e.g., 'How to replace fuser unit on CX963')\n- manufacturer (optional): Device manufacturer\n- model (optional): Device model\n\nExample: query='How to replace fuser unit', manufacturer='Lexmark', model='CX963'",
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"query\": \"How to replace fuser unit\",\n  \"manufacturer\": \"Lexmark\",\n  \"model\": \"CX963\"\n}",
        "options": {}
      },
      "id": "manual-tool",
      "name": "manual_specialist",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [1000, 650],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {
          "temperature": 0.1
        }
      },
      "id": "error-llm",
      "name": "Error Code LLM",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "position": [1200, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {
          "temperature": 0.1
        }
      },
      "id": "parts-llm",
      "name": "Parts LLM",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "position": [1200, 350],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {
          "temperature": 0.1
        }
      },
      "id": "video-llm",
      "name": "Video LLM",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "position": [1200, 500],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {
          "temperature": 0.1
        }
      },
      "id": "manual-llm",
      "name": "Manual LLM",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "position": [1200, 650],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "You are an **Error Code Diagnosis Specialist**.\n\n## Your Expertise\nYou are an expert in diagnosing technical error codes for printers and copiers.\n\n## Your Task\nWhen given an error code, you must:\n1. Search the error_codes database\n2. Provide a precise diagnosis\n\n## Available Action\nYou have ONE action available:\n- **search_database**: Query the error codes database\n\n## Input Format\nYou receive:\n- error_code: The error code to diagnose\n- manufacturer: Device manufacturer (optional)\n- model: Device model (optional)\n\n## Output Format\nProvide a structured response:\n\n**Fehlercode:** [code]\n**Beschreibung:** [what the error means]\n**Ursache:** [root cause]\n**Betroffene Komponenten:** [which parts are affected]\n**L√∂sung:** [solution steps]\n**Quelle:** [document, page]\n\n## Important Rules\n- ‚úÖ ALWAYS use search_database action\n- ‚úÖ Be precise and technical\n- ‚úÖ Always cite sources (document, page number)\n- ‚ùå NEVER make up error codes or solutions\n- ‚ùå If not found, say so clearly\n\n## Language\nAlways respond in German."
        }
      },
      "id": "error-agent",
      "name": "Error Code Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [1400, 200],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "You are a **Spare Parts Specialist**.\n\n## Your Expertise\nYou are an expert in spare parts, part numbers, and compatibility for printers and copiers.\n\n## Your Task\nWhen given a parts search query, you must:\n1. Search the parts database\n2. Provide accurate part information\n\n## Available Action\nYou have ONE action available:\n- **search_database**: Query the parts database\n\n## Input Format\nYou receive:\n- search_term: What to search for (e.g., 'Fuser Unit')\n- manufacturer: Device manufacturer (optional)\n- model: Device model (optional)\n\n## Output Format\nProvide a structured response:\n\n**Ersatzteil:** [part name]\n**Teilenummer:** [part number]\n**Beschreibung:** [what it does]\n**Kompatible Modelle:** [which devices it fits]\n**Verf√ºgbarkeit:** [if available]\n**Quelle:** [catalog, page]\n\n## Important Rules\n- ‚úÖ ALWAYS use search_database action\n- ‚úÖ Provide exact part numbers\n- ‚úÖ List compatible models\n- ‚úÖ Always cite sources\n- ‚ùå NEVER make up part numbers\n- ‚ùå If not found, suggest alternatives or say so clearly\n\n## Language\nAlways respond in German."
        }
      },
      "id": "parts-agent",
      "name": "Parts Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [1400, 350],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "You are a **Video Tutorial Specialist**.\n\n## Your Expertise\nYou are an expert in finding repair and maintenance videos for printers and copiers.\n\n## Your Task\nWhen given a video search query, you must:\n1. Search the video database\n2. Provide relevant video links\n\n## Available Action\nYou have ONE action available:\n- **search_database**: Query the video database\n\n## Input Format\nYou receive:\n- search_term: What to search for (e.g., 'Fuser Unit replacement')\n- manufacturer: Device manufacturer (optional)\n- model: Device model (optional)\n\n## Output Format\nProvide a structured response:\n\n**Video:** [title]\n**Link:** [URL]\n**Beschreibung:** [what the video shows]\n**Dauer:** [length]\n**Sprache:** [language]\n\n## Important Rules\n- ‚úÖ ALWAYS use search_database action\n- ‚úÖ Provide working video links\n- ‚úÖ Describe what the video shows\n- ‚ùå NEVER make up video links\n- ‚ùå If not found, say so clearly\n\n## Language\nAlways respond in German."
        }
      },
      "id": "video-agent",
      "name": "Video Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [1400, 500],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "You are a **Service Manual Specialist**.\n\n## Your Expertise\nYou are an expert in service manuals and technical documentation for printers and copiers.\n\n## Your Task\nWhen given a technical question, you must:\n1. Search the service manual database (vector store)\n2. Provide step-by-step instructions\n\n## Available Action\nYou have ONE action available:\n- **search_manuals**: Semantic search in service manuals\n\n## Input Format\nYou receive:\n- query: The technical question (e.g., 'How to replace fuser unit')\n- manufacturer: Device manufacturer (optional)\n- model: Device model (optional)\n\n## Output Format\nProvide a structured response:\n\n**Anleitung:** [procedure name]\n\n**Schritte:**\n1. [Step 1]\n2. [Step 2]\n3. [Step 3]\n...\n\n**Hinweise:** [important notes, warnings]\n**Werkzeug:** [required tools]\n**Quelle:** [manual, page]\n\n## Important Rules\n- ‚úÖ ALWAYS use search_manuals action\n- ‚úÖ Provide clear step-by-step instructions\n- ‚úÖ Include safety warnings if relevant\n- ‚úÖ Always cite sources (manual, page)\n- ‚ùå NEVER make up procedures\n- ‚ùå If not found, say so clearly\n\n## Language\nAlways respond in German."
        }
      },
      "id": "manual-agent",
      "name": "Manual Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [1400, 650],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://backend:8000/api/v1/error-codes/search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"code\": \"{{ $json.error_code }}\",\n  \"manufacturer\": \"{{ $json.manufacturer }}\",\n  \"model\": \"{{ $json.model }}\"\n}",
        "options": {}
      },
      "id": "error-http",
      "name": "Search Error Codes",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "position": [1600, 200],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://backend:8000/api/v1/parts/search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"search_term\": \"{{ $json.search_term }}\",\n  \"manufacturer\": \"{{ $json.manufacturer }}\",\n  \"model\": \"{{ $json.model }}\"\n}",
        "options": {}
      },
      "id": "parts-http",
      "name": "Search Parts",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "position": [1600, 350],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://backend:8000/api/v1/videos/search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"search_term\": \"{{ $json.search_term }}\",\n  \"manufacturer\": \"{{ $json.manufacturer }}\",\n  \"model\": \"{{ $json.model }}\"\n}",
        "options": {}
      },
      "id": "video-http",
      "name": "Search Videos",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "position": [1600, 500],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "tableName": "krai.chunks",
        "options": {
          "queryName": "match_chunks"
        }
      },
      "id": "manual-vector",
      "name": "Search Manuals Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [1600, 650],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "nomic-embed-text",
        "options": {}
      },
      "id": "embeddings",
      "name": "Embeddings Ollama",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "position": [1800, 650],
      "typeVersion": 1
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [[{ "node": "Main Coordinator Agent", "type": "main", "index": 0 }]]
    },
    "Main LLM": {
      "ai_languageModel": [[{ "node": "Main Coordinator Agent", "type": "ai_languageModel", "index": 0 }]]
    },
    "Postgres Chat Memory": {
      "ai_memory": [[{ "node": "Main Coordinator Agent", "type": "ai_memory", "index": 0 }]]
    },
    "error_code_specialist": {
      "ai_tool": [[{ "node": "Main Coordinator Agent", "type": "ai_tool", "index": 0 }]]
    },
    "parts_specialist": {
      "ai_tool": [[{ "node": "Main Coordinator Agent", "type": "ai_tool", "index": 0 }]]
    },
    "video_specialist": {
      "ai_tool": [[{ "node": "Main Coordinator Agent", "type": "ai_tool", "index": 0 }]]
    },
    "manual_specialist": {
      "ai_tool": [[{ "node": "Main Coordinator Agent", "type": "ai_tool", "index": 0 }]]
    },
    "Error Code LLM": {
      "ai_languageModel": [[{ "node": "Error Code Agent", "type": "ai_languageModel", "index": 0 }]]
    },
    "Parts LLM": {
      "ai_languageModel": [[{ "node": "Parts Agent", "type": "ai_languageModel", "index": 0 }]]
    },
    "Video LLM": {
      "ai_languageModel": [[{ "node": "Video Agent", "type": "ai_languageModel", "index": 0 }]]
    },
    "Manual LLM": {
      "ai_languageModel": [[{ "node": "Manual Agent", "type": "ai_languageModel", "index": 0 }]]
    },
    "Error Code Agent": {
      "ai_agent": [[{ "node": "error_code_specialist", "type": "ai_agent", "index": 0 }]]
    },
    "Parts Agent": {
      "ai_agent": [[{ "node": "parts_specialist", "type": "ai_agent", "index": 0 }]]
    },
    "Video Agent": {
      "ai_agent": [[{ "node": "video_specialist", "type": "ai_agent", "index": 0 }]]
    },
    "Manual Agent": {
      "ai_agent": [[{ "node": "manual_specialist", "type": "ai_agent", "index": 0 }]]
    },
    "Search Error Codes": {
      "ai_tool": [[{ "node": "Error Code Agent", "type": "ai_tool", "index": 0 }]]
    },
    "Search Parts": {
      "ai_tool": [[{ "node": "Parts Agent", "type": "ai_tool", "index": 0 }]]
    },
    "Search Videos": {
      "ai_tool": [[{ "node": "Video Agent", "type": "ai_tool", "index": 0 }]]
    },
    "Search Manuals Vector Store": {
      "ai_vectorStore": [[{ "node": "Manual Agent", "type": "ai_vectorStore", "index": 0 }]]
    },
    "Embeddings Ollama": {
      "ai_embedding": [[{ "node": "Search Manuals Vector Store", "type": "ai_embedding", "index": 0 }]]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "meta": {
    "instanceId": "krai-v2.2-specialized"
  },
  "tags": [
    {
      "name": "KRAI",
      "id": "krai"
    },
    {
      "name": "Production",
      "id": "production"
    }
  ]
}
