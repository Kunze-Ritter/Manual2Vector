{
  "name": "KRAI AI Agent - Optimized",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [240, 300],
      "id": "chat-trigger",
      "name": "When chat message received",
      "webhookId": "krai-chat-agent-optimized"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.chatInput }}",
              "rightValue": "/search",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "search-command",
      "name": "Search Command?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 180]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.chatInput }}",
              "rightValue": "/models",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "model-command",
      "name": "Model Command?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 60]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.chatInput }}",
              "rightValue": "/status",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "status-command",
      "name": "Status Command?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 420]
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "tableName": {
          "__rl": true,
          "value": "document_vectors",
          "mode": "list"
        },
        "topK": 5,
        "includeDocumentMetadata": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [680, 180],
      "id": "supabase-vector-store",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "supabase-langchain",
          "name": "Supabase LangChain"
        }
      }
    },
    {
      "parameters": {
        "resource": "row",
        "operation": "getAll",
        "table": "products",
        "options": {
          "query": "={{ $('When chat message received').first().json.chatInput.replace('/models ', '') }}",
          "limit": 10
        }
      },
      "id": "search-models",
      "name": "Search Models",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [680, 60],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-langchain",
          "name": "Supabase LangChain"
        }
      }
    },
    {
      "parameters": {
        "resource": "function",
        "operation": "execute",
        "functionName": "get_system_status",
        "options": {}
      },
      "id": "get-system-status",
      "name": "Get System Status",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [680, 420],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-langchain",
          "name": "Supabase LangChain"
        }
      }
    },
    {
      "parameters": {
        "model": "embeddinggemma:latest",
        "options": {
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [900, 180],
      "id": "embeddings-ollama",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "ollama-langchain",
          "name": "Ollama LangChain"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.2:latest",
        "options": {
          "temperature": 0.7,
          "maxTokens": 1000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [900, 300],
      "id": "ollama-chat-model",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "ollama-langchain",
          "name": "Ollama LangChain"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "Du bist der KRAI AI Agent, ein intelligenter Assistent für technische Dokumentation und Service-Manuals. Du hilfst bei Fragen zu Druckern, Kopierern und technischen Geräten. Antworte immer auf Deutsch und sei hilfreich und präzise. Du hast Zugriff auf:\n- Vector Search für Dokumentensuche\n- Produktdatenbank für Modell-Informationen\n- System-Status für Statistiken\nNutze diese Tools intelligent basierend auf der Benutzeranfrage."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [1120, 300],
      "id": "ai-agent",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [1120, 420],
      "id": "postgres-chat-memory",
      "name": "Postgres Chat Memory"
    },
    {
      "parameters": {
        "jsCode": "// Format Search Results for AI Agent\nconst searchResults = $input.first().json;\nconst chatInput = $('When chat message received').first().json.chatInput;\n\nlet context = '';\nif (searchResults && searchResults.length > 0) {\n  context = 'Relevante Dokumente:\\n';\n  searchResults.forEach((result, index) => {\n    const content = result.content || result.pageContent || 'No content';\n    const metadata = result.metadata || {};\n    context += `${index + 1}. ${content.substring(0, 200)}...\\n`;\n    if (metadata.source) {\n      context += `   Quelle: ${metadata.source}\\n`;\n    }\n  });\n}\n\nreturn {\n  chatInput: chatInput,\n  context: context,\n  results: searchResults || []\n};"
      },
      "id": "format-search-context",
      "name": "Format Search Context",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 180]
    },
    {
      "parameters": {
        "jsCode": "// Format Models for AI Agent\nconst models = $input.first().json;\nconst chatInput = $('When chat message received').first().json.chatInput;\n\nlet context = '';\nif (models && models.length > 0) {\n  context = 'Verfügbare Modelle:\\n';\n  models.forEach((model, index) => {\n    context += `${index + 1}. ${model.name || 'Unknown'} (${model.model || 'Unknown'}) - ${model.manufacturer_name || 'Unknown'}\\n`;\n    if (model.description) {\n      context += `   Beschreibung: ${model.description.substring(0, 100)}...\\n`;\n    }\n  });\n}\n\nreturn {\n  chatInput: chatInput,\n  context: context,\n  models: models || []\n};"
      },
      "id": "format-models-context",
      "name": "Format Models Context",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 60]
    },
    {
      "parameters": {
        "jsCode": "// Format Status Response\nconst statusData = $input.first().json;\nconst response = {\n  chatInput: '/status',\n  context: `System Status:\\n` +\n    `- Dokumente: ${statusData[0]?.total_documents || 0}\\n` +\n    `- Abgeschlossen: ${statusData[0]?.completed_documents || 0}\\n` +\n    `- Pending: ${statusData[0]?.pending_documents || 0}\\n` +\n    `- Chunks: ${statusData[0]?.total_chunks || 0}\\n` +\n    `- Bilder: ${statusData[0]?.total_images || 0}\\n` +\n    `- Embeddings: ${statusData[0]?.total_embeddings || 0}\\n` +\n    `- Produkte: ${statusData[0]?.total_products || 0}\\n` +\n    `- Hersteller: ${statusData[0]?.total_manufacturers || 0}\\n` +\n    `- Letzte Aktivität: ${new Date().toLocaleString('de-DE')}`,\n  status: statusData[0] || {}\n};\n\nreturn response;"
      },
      "id": "format-status-context",
      "name": "Format Status Context",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 420]
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Search Command?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Model Command?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Status Command?",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Command?": {
      "main": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Model Command?": {
      "main": [
        [
          {
            "node": "Search Models",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status Command?": {
      "main": [
        [
          {
            "node": "Get System Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "main": [
        [
          {
            "node": "Format Search Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Models": {
      "main": [
        [
          {
            "node": "Format Models Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get System Status": {
      "main": [
        [
          {
            "node": "Format Status Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Search Context": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Models Context": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Status Context": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "instanceId": "krai-ai-agent-optimized"
  },
  "id": "krai-ai-agent-optimized",
  "tags": [
    {
      "createdAt": "2024-10-01T08:00:00.000Z",
      "updatedAt": "2024-10-01T08:00:00.000Z",
      "id": "krai-ai-agent-optimized",
      "name": "KRAI AI Agent"
    }
  ]
}
